import PDFDocument from 'pdfkit';
import fs from 'fs';

export function generatePdfReport({ nome, numero, progresso = [], caminho }) {
  try {
    const doc = new PDFDocument({ margin: 50 });

    // Nota: No Render, o disco √© ef√™mero; o arquivo ser√° apagado ap√≥s reinicializa√ß√µes
    doc.pipe(fs.createWriteStream(caminho));

    // Cabe√ßalho
    doc.fontSize(20)
      .text('üìö Relat√≥rio Semanal - Professora Lumi üíú', { align: 'center' })
      .moveDown();

    // Informa√ß√µes b√°sicas
    doc.fontSize(14)
      .text(`Aluno(a): ${nome || 'N√£o informado'}`)
      .text(`N√∫mero: ${numero || 'N√£o informado'}`)
      .moveDown();

    // Desempenho
    doc.fontSize(16).text('üìä Desempenho nos desafios:', { underline: true }).moveDown(0.5);

    if (progresso.length === 0) {
      doc.fontSize(12).text('Nenhum desafio registrado nesta semana.');
    } else {
      progresso.forEach((item, i) => {
        const categoria = item.categoria || 'Indefinida';
        // Ajuste para progresso do index.js, que n√£o tem acertos/erros separados
        const resultado = item.acertou ? 'Acertou ‚úÖ' : 'N√£o acertou ‚ùå';
        doc.fontSize(12).text(
          `${i + 1}. Categoria: ${categoria} | Resultado: ${resultado}`
        );
      });
    }

    doc.moveDown(2);

    // Encerramento
    doc.fontSize(12).text(
      'Continue incentivando o aprendizado com carinho e curiosidade! At√© a pr√≥xima semana. ‚ú®',
      { align: 'center' }
    );

    doc.end();
  } catch (error) {
    console.error('‚ùå Erro ao gerar PDF:', error);
    throw error;
  }
}
